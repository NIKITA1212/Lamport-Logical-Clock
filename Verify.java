//This will read the output generated by algo 1 from a file, store it in lcout[][] and will print it on console
import java.io.*;
import java.util.StringTokenizer;
import java.util.Arrays;


public class Verify
{
	static int ev[]={0,0,0,0,0,0,0,0,0},p=0;
	static int lcout[][]=new int[15][25];
	static String str[][];
	static int ss, sr=0, flag=0,lcr;
	public static void main(String[] args) throws IOException  {
		// TODO Auto-generated method stub
		FileInputStream fstream = new FileInputStream("a1out.txt");
		BufferedReader br = new BufferedReader(new InputStreamReader(fstream));
		String strLine;
		int i,j;
		StringTokenizer st;
		//Read File Line By Line
		while ((strLine = br.readLine()) != null)   
		{// Print the content on the console
			st=new StringTokenizer(strLine);
			if(Arrays.asList("P1", "P2", "P3", ":").contains(st.nextToken()))
				st.nextToken();
			while(st.hasMoreTokens())
			{
				lcout[p][ev[p]]=Integer.parseInt(st.nextToken());
				ev[p]++;
			}
			p++;
		}
		System.out.println();
		System.out.println("Logical value read from a1out.txt and stored in 2-D lcout array");
		for(i=0;i<p;i++)
		{
			for(j=0;j<ev[i];j++)
				System.out.print(lcout[i][j]+" ");
			System.out.println();
		}
		br.close();
		assignisr(p);
	}
	public static void assignisr(int p)
	{
		int i,j;
		str=new String[5][25];
		
		//search for lc-1 for each lc if not found print error and exit 0
		for(i=0;i<p;i++)
		{
			for(j=0;j<(ev[j]);j++)
			{
				lcr=lcout[i][j];
				flag=searchlcr(lcr);
				if(flag==1)
					break;
			}
			if(flag==1)
				break;
		}
		//count total number of r and assign it to ss
		for (i=0;i<p;i++)
		{
			for (j=0;j<ev[i];j++)
			{
				if(j==0) 		// initial assignment
				{
					if(lcout[i][j]==1)
					{
						continue;
					}
					else
					{
						sr++;
					}
				}
				else if(lcout[i][j]!=lcout[i][j-1]+1)    //receive event mila
				{	
					sr++;
				}
			}
		}
		ss=sr+1;
		
		for (i=0;i<p;i++)
		{
			for (j=0;j<ev[i];j++)
			{
				if(j==0) 		// initial assignment
				{
					if(lcout[i][j]==1)
					{
						str[i][j]="i";
					}
					else
					{
						searchs(i,(lcout[i][j]-1));
						str[i][j]="r"+(ss);
					}
				}
				else if(lcout[i][j]!=lcout[i][j-1]+1)    //receive event is hit
				{	
					searchs(i,(lcout[i][j]-1));
					str[i][j]="r"+(ss);
				}
				else if(lcout[i][j]==lcout[i][j-1]+1 && str[i][j]==null)
				{	
					str[i][j]="i";
				}
			}
		}	
		if(flag==1)
			System.out.println("Incorrect Input");
		else
		{
			System.out.println();
			System.out.println("Printing Output");
			for(i=0;i<p;i++)
			{
				for(j=0;j<ev[i];j++)
				{
					System.out.print(str[i][j]+" ");
				}
			System.out.println();
			}
		}
	}




	public static int searchlcr(int a)
	{
		int i,j;
		for(i=0;i<p;i++)
		{
			for(j=0;j<ev[i];j++)
			{
				if(a==1)
					return 0;
				else
				{
					if(lcout[i][j]==a-1)
						return 0;
				}
			}
		}
		return 1;
	}
	
	
	public static void searchs(int pr,int lc)
	{
		int i,j;
		for(i=0;i<p;i++)
		{
			if(i!=pr)
			{
				for(j=0;j<ev[i];j++)
				{
					if(lcout[i][j]==lc)
					{
						ss--;
						str[i][j]="s"+ss;
					}
				}
			}
		}
	}
}